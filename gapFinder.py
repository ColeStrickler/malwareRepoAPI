import requests
import sys
import json


# Author: Cole Strickler
# Description: Finds malware samples on MalwareBazaar not detected by selected Antivirus engines
# Date: 7/14/2022
# Dependencies: requests(pip3 install requests)
# USAGE: python3 ./gapFinder.py "Antivirus1,Antivirus2,..." [VirusTotal API Key]



AV_SOLUTION = sys.argv[1]
VIRUS_TOTAL_API_KEY = sys.argv[2]


vendors = ['Bkav', 'Lionic', 'tehtris', 'ClamAV', 'FireEye', 'CAT-QuickHeal', 'McAfee', 'Malwarebytes', 'VIPRE', 'Paloalto', 'Sangfor', 'K7AntiVirus', 'Alibaba', 'K7GW', 'Trustlook', 'BitDefenderTheta', 'VirIT', 'Cyren', 'SymantecMobileInsight', 'Symantec', 'Elastic', 'ESET-NOD32', 'Baidu', 'TrendMicro-HouseCall', 'Avast', 'Cynet', 'Kaspersky', 'BitDefender', 'NANO-Antivirus', 'ViRobot', 'MicroWorld-eScan', 'Rising', 'Ad-Aware', 'Emsisoft', 'Comodo', 'F-Secure', 'DrWeb', 'Zillya', 'TrendMicro', 'McAfee-GW-Edition', 'Trapmine', 'Sophos', 'APEX', 'Avast-Mobile', 'Jiangmin', 'Webroot', 'Avira', 'MAX', 'Antiy-AVL', 'Kingsoft', 'Microsoft', 'Gridinsoft', 'Arcabit', 'SUPERAntiSpyware', 'ZoneAlarm', 'GData', 'SentinelOne', 'BitDefenderFalx', 'AhnLab-V3', 'Acronis', 'VBA32', 'ALYac', 'TACHYON', 'Cylance', 'Zoner', 'Tencent', 'Yandex', 'Ikarus', 'MaxSecure', 'Fortinet', 'AVG', 'Cybereason', 'Panda', 'CrowdStrike']

try:
    solution_list = AV_SOLUTION.split(",")
    for v in solution_list:
        if v in vendors:
            pass
        else:
            print("You entered an invalid AV vendor")
            sys.exit(-1)
except Exception as e:
    solution_list = [AV_SOLUTION]
    for v in solution_list:
        if v in vendors:
            pass
        else:
            print("You entered an invalid AV vendor")
            sys.exit(-1)


ret_dict = {}

for v in solution_list:
    ret_dict[v + "_Detected"] = []
    ret_dict[v + "_notDetected"] = []


print(f"""
                                                                                                                                               
     ,o888888o.          .8.          8 888888888o   8 8888888888    8 8888 b.             8 8 888888888o.      8 8888888888   8 888888888o.   
    8888     `88.       .888.         8 8888    `88. 8 8888          8 8888 888o.          8 8 8888    `^888.   8 8888         8 8888    `88.  
 ,8 8888       `8.     :88888.        8 8888     `88 8 8888          8 8888 Y88888o.       8 8 8888        `88. 8 8888         8 8888     `88  
 88 8888              . `88888.       8 8888     ,88 8 8888          8 8888 .`Y888888o.    8 8 8888         `88 8 8888         8 8888     ,88  
 88 8888             .8. `88888.      8 8888.   ,88' 8 888888888888  8 8888 8o. `Y888888o. 8 8 8888          88 8 888888888888 8 8888.   ,88'  
 88 8888            .8`8. `88888.     8 888888888P'  8 8888          8 8888 8`Y8o. `Y88888o8 8 8888          88 8 8888         8 888888888P'   
 88 8888   8888888 .8' `8. `88888.    8 8888         8 8888          8 8888 8   `Y8o. `Y8888 8 8888         ,88 8 8888         8 8888`8b       
 `8 8888       .8'.8'   `8. `88888.   8 8888         8 8888          8 8888 8      `Y8o. `Y8 8 8888        ,88' 8 8888         8 8888 `8b.     
    8888     ,88'.888888888. `88888.  8 8888         8 8888          8 8888 8         `Y8o.` 8 8888    ,o88P'   8 8888         8 8888   `8b.   
     `8888888P' .8'       `8. `88888. 8 8888         8 8888          8 8888 8            `Yo 8 888888888P'      8 888888888888 8 8888     `88. 
     
                                                            dev Cole Strickler
""")






def query_bazaarSubmissions():
    data = {'query': 'get_file_type', 'file_type': "exe", "limit": 150}
    url = "https://mb-api.abuse.ch/api/v1/"
    response = requests.post(url, data=data)
    ret = []
    list = response.json()["data"]
    for dict in list:
        ret.append(dict['sha256_hash'])
    return ret



def query_VT_detection(hash_list, r_dict):
    vt_url = "https://www.virustotal.com/api/v3/files/"
    headers = {"x-apikey": VIRUS_TOTAL_API_KEY}
    for hashVal in hash_list:
        response = requests.get(vt_url + hashVal, headers=headers)
        obj = response.json()
        if response.status_code == 200:
            uuid = response.json()['data']['attributes']['sha256']
            for v in solution_list:
                try:
                    bDetected = response.json()['data']['attributes']['last_analysis_results'][v]['category']
                    if bDetected == 'undetected':
                        r_dict[v + '_notDetected'].append(uuid)
                    else:
                        r_dict[v + '_Detected'].append(uuid)
                except Exception:
                    pass
        else:
            print(f"{response.status_code} unable to query {hashVal}. Check the virus total API limitations\n")




def print_Results(dict):
    for v in solution_list:
        print(f"</==========Detected {v}==========\>")
        for h in dict[v + "_Detected"]:
            print(h)
        print("\n\n")

    for v in solution_list:
        print(f"</==========Not Detected {v}==========\>")
        for h in dict[v + "_notDetected"]:
            print(h)
        print("\n\n")


hash_list = query_bazaarSubmissions()  # queries 150 most recent MalwareBazaar Submissions and returns a list of SHA-256 hashes
query_VT_detection(hash_list, ret_dict)  # query VirusTotal for returned hashes and record detection results for selected AV
print_Results(ret_dict)  # print the formatted results



